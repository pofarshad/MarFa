The core problem with your build, based on the provided logs, is that Gradle cannot find your source code files (Kotlin and Java).

Let's break down the relevant parts:

Build Failure:

build failed 1 minute ago in 2m 47s
This clearly states the build failed.

Key Error Messages (Lines 7424 - 7464):
You have a very long list of these errors, which is the direct cause of the failure:

file or directory '/home/runner/work/MarFa/MarFa/app/src/debug/kotlin', not found
file or directory '/home/runner/work/MarFa/MarFa/app/src/debug/java', not found
file or directory '/home/runner/work/MarFa/MarFa/app/src/main/java', not found
The build environment (likely GitHub Actions, given the /home/runner/work/ path) is trying to compile your code for the :app:compileDebugKotlin task, but it cannot locate the standard source directories within your project.

Suspicious Path Structure:
The path it's looking in is /home/runner/work/MarFa/MarFa/app/src/....

/home/runner/work/ is the standard GitHub Actions workspace.
The MarFa/MarFa part is unusual. It suggests that your repository (named MarFa) might be checked out into a directory also named MarFa within the workspace, and then your actual Android project (app) is inside that MarFa directory.
Typical GitHub Actions checkout:
If your repository is pofarshad/MarFa, actions/checkout usually places the repository content directly under /home/runner/work/MarFa/.
So, if your app directory is at the root of your repository (e.g., MarFa/app), the expected path would be /home/runner/work/MarFa/app/src/....

The path /home/runner/work/MarFa/MarFa/app/src/... implies one of two things:

Your repository's root itself contains a folder named MarFa, which then contains app. So, the structure is repo-root/MarFa/app. When checked out, it becomes /home/runner/work/MarFa/MarFa/app.
Your GitHub Actions workflow is performing the checkout in a non-standard way, or the working-directory for your Gradle command is set incorrectly.
In summary, the problem is that your Gradle build, running in the CI/CD environment, cannot find your Android application's source code files because the path it's looking at (/home/runner/work/MarFa/MarFa/app/src/...) does not contain them.

What to do to fix it:

Inspect your repository structure:

Connect to your Git repository (e.g., using your local machine).
Navigate to the root of your MarFa repository.
Is your Android project's app folder directly under the repository root (e.g., YourRepo/app/)?
Or is it nested one level deeper (e.g., YourRepo/MarFa/app/)?
Adjust your GitHub Actions workflow file (.github/workflows/android.yml or similar):

Scenario A: app is directly under your repository root (YourRepo/app/)
This is the most common setup. The current paths suggest the CI/CD environment is trying to find app inside an extra MarFa directory.

Check the actions/checkout step: Ensure it's not doing anything unusual like checking out into a subfolder. The default is usually correct.
Check the Build MarFaNet APK step: If you have a working-directory parameter in your run command for Gradle, it might be pointing to the wrong place. If app is at the root, your command should be something like:
- name: Build MarFaNet APK
  run: ./gradlew build
  working-directory: ./app # <-- If your Android project is in the 'app' directory at the root of your repo
Or, if the workflow is run from the repository root, you might not need working-directory for build. But then the file or directory not found errors are more likely due to the MarFa/MarFa nesting.
Scenario B: Your app folder is nested (YourRepo/MarFa/app/)
If your repository physically contains a MarFa folder at its root, and inside that is your app folder, then the path /home/runner/work/MarFa/MarFa/app makes sense. In this case, you need to ensure your Gradle command is executed from the correct directory:

- name: Build MarFaNet APK
  run: ./gradlew build
  working-directory: ./MarFa # <-- Tell Gradle to run from the MarFa subdirectory
Other observations (less critical):

Resource missing (lines 7400, 7401, 7404): These are usually warnings that Gradle logs when it tries to download dependencies from one repository (e.g., dl.google.com/dl/android/maven2) and doesn't find them, so it falls back to another (e.g., repo.maven.apache.org/maven2). It then successfully finds and downloads them (lines 7402, 7403, 7405, etc.). These are not the cause of your build failure.
"No history is available" / "Caching disabled": These are just informational messages from Gradle about its caching mechanism and why certain tasks are being re-run from scratch. They don't indicate an error.
Focus on fixing the "file or directory not found" errors by verifying your repository structure and adjusting the working-directory in your GitHub Actions workflow accordingly.