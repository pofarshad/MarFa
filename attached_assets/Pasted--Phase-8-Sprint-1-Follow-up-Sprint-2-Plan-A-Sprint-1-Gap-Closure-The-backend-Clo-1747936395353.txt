# **Phase 8 – Sprint 1 Follow‑up & Sprint 2 Plan**

## A • Sprint 1 Gap‑Closure

The backend Cloud Sync service is implemented, but two items remain to reach full **Definition of Done**.

| Outstanding ID | Description                                                                  | Action                                                                                                                                                                                         | Owner       | ETA |
| -------------- | ---------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- | --- |
| CS‑1.5         | **KMP client library** (`sync-client`) with offline‑first cache & unit tests | ➜ Implement Kotlin Multiplatform module → expect iOS/Android/Desktop targets; expose `SyncClient.syncUp()` / `syncDown()` APIs.<br>➜ Write encryption round‑trip tests (100% branch coverage). | Mobile Core | 2 d |
| CS‑1.6         | **CI pipeline (microservice)**                                               | ➜ Add `Dockerfile` + GitHub Actions workflow:<br> `go test ./...` → `golangci‑lint` → `docker build & push`.<br>➜ Integrate Snyk scan; block on High/Critical CVEs.                            | DevOps      | 1 d |

*Close these tasks before Sprint 2 demo to declare Sprint 1 “complete”.*

---

## B • Sprint 2 Goal (2 weeks)

Deliver the **Desktop MVP** plus fully integrated **KMP sync‑client** across Android & iOS test apps.

### 1 • Desktop MVP Tasks (carry‑over)

| ID   | Description                                                                | Est.  |
| ---- | -------------------------------------------------------------------------- | ----- |
| DT‑1 | Compose‑Multiplatform window + basic UI                                    | 1 d   |
| DT‑2 | Integrate shared core + `MarfaVpnController`                               | 0.5 d |
| DT‑3 | Bundle Xray native binaries for x86\_64 & arm64                            | 0.5 d |
| DT‑4 | Real‑time stats overlay (latency, throughput)                              | 1 d   |
| DT‑5 | Self‑contained installers (.dmg, .msi, .AppImage) via JetBrains Toolbox CI | 1 d   |

### 2 • Sync‑Client Integration

| ID   | Description                                                 | Est.  |
| ---- | ----------------------------------------------------------- | ----- |
| SC‑1 | Integrate `sync-client` in Android app → auto sync on login | 0.5 d |
| SC‑2 | Integrate in iOS foundation (SwiftUI bridge)                | 0.5 d |
| SC‑3 | Add background sync scheduler + conflict UI banner          | 0.5 d |

### 3 • Sprint Logistics

* **Start:** Monday Week 1 • **End:** Friday Week 2
* Daily stand‑up 10:00 UTC • Demo & Retro 15:00 UTC on final day.

### 4 • Definition of Done (Sprint 2)

1. Desktop app connects & disconnects successfully on Win/macOS/Linux.
2. `sync-client` library passes 100 % automated round‑trip test.
3. Android & iOS prototypes show synced profile change.
4. CI for microservice builds Docker image & pushes to staging ECR/GCR.
5. Lint/Detekt & golangci‑lint clean; no High/Critical Snyk findings.

---

## C • Risk Watch

* **Xray desktop permissions:** Verify TUN/TAP access on Windows early.
* **App Store VPN timing:** Begin Apple entitlement request now to avoid delay.

---

*Approve this follow‑up plan to proceed; otherwise advise on priority shifts (e.g. Public API or Browser Extension).*
