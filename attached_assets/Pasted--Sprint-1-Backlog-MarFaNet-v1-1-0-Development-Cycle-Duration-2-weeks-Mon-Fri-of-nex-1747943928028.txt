# **Sprintâ€¯1 Backlog â€“ MarFaNetâ€¯v1.1.0 Development Cycle**

*DurationÂ :* 2â€¯weeks (Monâ€¯â†’â€¯Fri of next fortnight)
*Sprint GoalÂ :* Deliver splitâ€‘tunnelling MVP, WireGuard core integration POC, and realâ€‘time stats overlay skeletonâ€”while keeping CI green under AGPâ€¯9Â + Kotlinâ€¯2.0.

---

## 1Â â€¢ Workstream Overview

| EpicÂ ID      | Component         | SprintÂ 1 Deliverable                                                        | AcceptanceÂ Criteria                                                               |
| ------------ | ----------------- | --------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |
| **STUâ€‘001**  | Splitâ€‘Tunnelling  | **AppSelectorFragment** built in Compose; writes allow/deny list to RoomÂ DB | User selects â‰¥3Â apps; Xray config JSON updated on connect; unit test passes.      |
| **WGâ€‘002**   | WireGuard Engine  | Build `wireguard-go` + JNI libs for arm64/x86\_64; toggle in Settings       | Demo connects to public WG endpoint; throughput benchmark â‰¥30â€¯% faster than Xray. |
| **RSOâ€‘003**  | Stats Overlay     | Compose overlay window showing RTT & up/down speed; permission request flow | Overlay appears while VPN active; hides on tap; unit test overlay lifecycle.      |
| **CMPâ€‘004**  | Compose Migration | HomeScreen refactored to JetpackÂ Compose with MaterialÂ 3 You colors         | No perf regression (>Â±5â€¯% memory); screenshot test green.                         |
| **TOOLâ€‘005** | Tooling Upgrade   | Merge AGPÂ 9 & Kotlinâ€¯2.0 to `develop`; CI green                             | All modules compile; detekt/lint zero new warnings.                               |

---

## 2Â â€¢ Task Breakdown & Owners

| TaskÂ ID | Description                        | Owner         | Est.  | Dep.   |
| ------- | ---------------------------------- | ------------- | ----- | ------ |
| STUâ€‘1   | Design Figma flow for App Selector | UX            | 0.5Â d | â€”      |
| STUâ€‘2   | Implement Room schema `AppRule`    | AndroidÂ DevÂ 1 | 0.5Â d | STUâ€‘1  |
| STUâ€‘3   | Compose UI + ViewModel             | AndroidÂ DevÂ 1 | 1Â d   | STUâ€‘2  |
| STUâ€‘4   | Integrate into VPNService builder  | AndroidÂ DevÂ 2 | 1Â d   | STUâ€‘3  |
| WGâ€‘1    | Crossâ€‘compile wireguardâ€‘go libs    | NetworkÂ Dev   | 1Â d   | â€”      |
| WGâ€‘2    | Create JNI bridge `WgNative.kt`    | NetworkÂ Dev   | 0.5Â d | WGâ€‘1   |
| WGâ€‘3    | Settings toggle + engine factory   | AndroidÂ DevÂ 2 | 0.5Â d | WGâ€‘2   |
| WGâ€‘4    | Throughput benchmark script        | QA            | 0.5Â d | WGâ€‘3   |
| RSOâ€‘1   | Overlay permission flow            | AndroidÂ DevÂ 1 | 0.5Â d | â€”      |
| RSOâ€‘2   | Stats polling coroutine            | AndroidÂ DevÂ 1 | 0.5Â d | RSOâ€‘1  |
| RSOâ€‘3   | Compose overlay UI                 | AndroidÂ DevÂ 1 | 0.5Â d | RSOâ€‘2  |
| CMPâ€‘1   | Migrate HomeScreen to Compose      | UIÂ Dev        | 1Â d   | TOOLâ€‘1 |
| TOOLâ€‘1  | AGPÂ 9 + KotlinÂ 2.0 upgrade branch  | DevOps        | 1Â d   | â€”      |

---

## 3Â â€¢ Sprint Timeline (Ganttâ€‘like)

```
WeekÂ 1 ðŸ”¹ðŸ”¹ðŸ”¹ðŸ”¹ðŸ”¹ WGâ€‘1 WGâ€‘2 WGâ€‘3  RSOâ€‘1 RSOâ€‘2 STUâ€‘1 STUâ€‘2  TOOLâ€‘1
WeekÂ 2 ðŸ”¹ðŸ”¹ðŸ”¹ðŸ”¹ðŸ”¹ STUâ€‘3 STUâ€‘4 WGâ€‘4 RSOâ€‘3 CMPâ€‘1  QA regression  Demo
```

---

## 4Â â€¢ Definition of Done (Sprintâ€¯1)

1. All tasks merged into `develop` with green CI & artefact build.
2. Demo APK (`v1.1.0-alpha1`) attaches to GitHub Actions artefacts.
3. Crashâ€‘free automated test run on Firebase TestÂ Lab.
4. Documentation updated (`SPLIT_TUNNELLING.md`, `WIREGUARD.md`).

---

## 5Â â€¢ Risks & Mitigations

* **WireGuard license/IP**Â â€“ Quick legal review before merge.
* **AGPÂ 9 instability**Â â€“ Keep fallback branch; can drop to AGPÂ 8 if blocking.
* **Overlay permission OEM quirks**Â â€“ Test on MIUI & EMUI early.

---

*Sprint ready for kickoff once PatchÂ 1.0.1 metrics hold green for 72Â h.*
