# **AutoFixBot 404 Troubleshooting Checklist**

> You’re still getting `HTTP 404` on the callback from GitHub → AutoFixBot. This means the request **reached** the host but hit the wrong path. Follow this checklist in order; tick each box as you confirm it.

---

## 1  Confirm Bot URL & Path

| Step | Command / Action                                         | Expected                             |
| ---- | -------------------------------------------------------- | ------------------------------------ |
| 1.1  | Open browser to **`https://<public‑bot‑host>/`**         | Likely *404* (root not handled) ✔    |
| 1.2  | Open **`https://<public‑bot‑host>/webhook`** in browser  | *404* (GET not allowed) ✔            |
| 1.3  | `curl -X POST -d '{}' https://<public‑bot‑host>/webhook` | *400* or *401* (signature missing) ✔ |

If 1.2 returns 404 **and** 1.3 returns *404* → your bot actually expects a **different path** (e.g. `/api/github`). Check your server code.

---

## 2  Verify Secrets in GitHub

| Secret              | Should contain                                              | How to view                  |
| ------------------- | ----------------------------------------------------------- | ---------------------------- |
| `AUTOFIXBOT_URL`    | Full HTTPS URL **including `/webhook`**                     | Settings → Secrets → Actions |
| `GH_WEBHOOK_SECRET` | Same string in GitHub & Bot `process.env.GH_WEBHOOK_SECRET` | idem                         |

> **Common mistake:** `AUTOFIXBOT_URL` is just domain without `/webhook` → GitHub calls root → 404.

---

## 3  Echo Secret in Dispatcher Workflow (debug)

Add one line temporarily to dispatcher step:

```yaml
- name: Debug URL
  run: echo "BOT_URL=$BOT_URL"
  env:
    BOT_URL: ${{ secrets.AUTOFIXBOT_URL }}
```

Rerun workflow → ensure path matches `/webhook`.

---

## 4  Check Bot Logs

In Replit console:

* **No log entry** → GitHub hit wrong path (still 404). Fix URL.
* **Log shows request but rejects “signature mismatch”** → Secret mismatch. Ensure SHA‑256 HMAC uses same secret.

---

## 5  Update & Test

1. Fix `AUTOFIXBOT_URL` secret to correct path.
2. Push empty commit to trigger new failed workflow purposely (`git commit --allow-empty -m "test failure"`).
3. Observer dispatcher job.

### Expected

```
📡 Calling AutoFixBot at: https://…/webhook
✅ AutoFixBot response: 204 No Content
```

Then AutoFixBot should create PR or issue.

---

## 6  After Success

* Remove debug echo step.
* Keep secrets stable.
* Document URL & secret in team README.

---

**If still stuck:** attach

* Dispatcher job log (with BOT\_URL echo).
* cURL test output for POST to /webhook.
* First 10 lines of Replit console when request arrives.

We can pinpoint next from there.
