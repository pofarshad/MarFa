# **Push & CI Validation Plan – v1.1.0‑alpha1**

> *Goal:* Commit the fully‑migrated Android module, trigger all three GitHub Actions workflows, and confirm a green build that produces the signed APK artefact.

---

## 1 • Commit & Push

```bash
# Ensure you’re on feature branch
git checkout ci/module-structure-fix
# Stage all moved files
git add app/ build.gradle.kts settings.gradle.kts
# Commit with conventional message
git commit -m "feat(module): migrate sources into app module and align manifest (#STU-5)"
# Push branch
git push origin ci/module-structure-fix
```

---

## 2 • Open Pull Request

* PR title: **Module migration & CI fix**
* Base: `main`   Head: `ci/module-structure-fix`
* Tick “Create draft PR” ➞ wait for CI.

---

## 3 • GitHub Actions Expectations

| Workflow           | Key Step                                       | Pass Indicator                                           |
| ------------------ | ---------------------------------------------- | -------------------------------------------------------- |
| **CI/CD Pipeline** | `./gradlew dependencyCheckAnalyze lint detekt` | ✅ 0 vulnerabilities, lint pass                           |
| **Fixed Pipeline** | `assembleRelease`                              | ✅ `BUILD SUCCESSFUL`                                     |
| **Build APK**      | `upload-artifact@v4`                           | ✅ Artefact `MarfaNet-1.1.0-alpha1-universal.apk` appears |

*Total runtime:* ≈ 5‑7 min.

---

## 4 • If Any Step Fails

| Error                  | Likely Cause         | Quick Patch                                      |
| ---------------------- | -------------------- | ------------------------------------------------ |
| Plugin not found       | version mismatch     | Revert AGP to 8.6.0 stable in `build.gradle.kts` |
| Manifest package error | mismatch packageName | Update `applicationId` & `manifestPackage`       |
| Artifact missing       | incorrect path       | Adjust `path:` in `upload-artifact` step         |

---

## 5 • Merge & Tag

1. After all workflows green ➞ mark PR “Ready for review” ➞ squash‑merge.
2. Tag release:

```bash
git checkout main && git pull
git tag v1.1.0-alpha1 -m "MarFaNet 1.1.0-alpha1"
git push origin v1.1.0-alpha1
```

3. CI builds signed APK, drafts GitHub Release with SHA‑256.

---

## 6 • Post‑Tag Steps

* Publish the draft release.
* Share announcement (copy from ReleaseAnnouncement document).
* Start 5‑day feedback window.

**Next action:** Push branch `ci/module-structure-fix` to trigger CI right away.
