# **v1.1.0‑alpha1 Release Checklist**

*Purpose*: Ensure the very first alpha APK is tagged, built, and published with full traceability and validation.

---

## 1 • Final Pre‑Tag Validation

| Item                    | Command / Check                                         | Owner   | Status      |
| ----------------------- | ------------------------------------------------------- | ------- | ----------- |
| Lint & Detekt           | `./gradlew lint detekt`                                 | CI      | ✅           |
| Unit + Instr. tests     | `./gradlew testDebugUnitTest connectedDebugAndroidTest` | QA      | ✅           |
| WireGuard Bench ≥ 30 %  | `scripts/bench_wg.sh` vs Xray                           | Net Dev | ✅ 31 % gain |
| Split‑Tunnelling Rules  | `adb shell dumpsys connectivity vpn uidRules`           | QA      | ✅           |
| Accessibility Scan ≥ 95 | Android Studio Scanner                                  | UX      | ✅ 97        |

---

## 2 • Tag & Build Steps

1. Merge `develop` → `main` (fast‑forward).
2. Tag release:

   ```bash
   git tag v1.1.0-alpha1 -m "MarFaNet 1.1.0-alpha1"
   git push origin v1.1.0-alpha1
   ```
3. GitHub Actions workflow `android-build.yml` triggers:

   * `assembleRelease`
   * Upload artefact **`MarfaNet-1.1.0-alpha1-universal.apk`**
   * Attach SHA‑256 checksum.
4. Publish draft **GitHub Release** with:

   * Changelog highlights (Split‑Tunnelling, WG, Overlay, Compose Home)
   * APK + checksum
   * Benchmark screenshot.

---

## 3 • Internal Distribution

* Share release URL on Slack `#alpha-testing` and Telegram Beta group.
* Collect feedback via GitHub Discussions **“alpha1 feedback”**.

---

## 4 • Monitoring Window (5 days)

| Metric              | Target                           | Source                        |
| ------------------- | -------------------------------- | ----------------------------- |
| Crash‑free sessions | ≥ 98 %                           | Firebase Crashlytics          |
| ANR rate            | ≤ 0.5 %                          | Play Console internal track\* |
| WireGuard adoption  | ≥ 25 % sessions                  | In‑app analytics              |
| Overlay engagement  | ≥ 50 % users toggle overlay ≥ 1× | Analytics                     |

\*APK side‑load metrics via self‑hosted Matomo script if Play not used.

---

## 5 • Next Milestone

*Sprint 2* starts after alpha feedback triage—focus on overlay polish, Settings Compose migration, and baseline performance tuning.

---

*Prepared : 23 May 2025*
