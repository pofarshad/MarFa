# **MarFaNet — Phase 4 Plan: CI/CD & Release Candidate**

> **Objective:** Transition the optimised codebase into a fully automated pipeline that builds, tests, signs, and publishes artefacts. Deliver a Release Candidate (RC‑1) ready for beta distribution.

---

## 1 • CI/CD Pipeline Architecture

| Stage                            | Tool                        | Key Actions                                                  | Blocking Gate            |
| -------------------------------- | --------------------------- | ------------------------------------------------------------ | ------------------------ |
| **Lint / Static‑Analysis**       | `./gradlew lint detekt`     | HTML + SARIF reports; upload artefact `lint-results.zip`.    | Fail on Any > Warning    |
| **Unit & Instrumentation Tests** | JUnit 5 + Robolectric       | `./gradlew testDebugUnitTest`                                | Coverage ≥ 80 %          |
| **Macrobenchmark**               | GH‑Hosted Pixel 6           | `./gradlew :macrobenchmark:run`                              | KPI targets met          |
| **Build APK**                    | `./gradlew assembleRelease` | Uses *architecture splits* & R8 full‑mode                    | Signing keystore present |
| **Security Scan**                | OWASP Dependency‑Check      | Generate report, block on Critical/High CVEs                 | 0 Critical/High          |
| **Coverage Upload**              | Codecov                     | `jacoco.xml` pushed to Codecov                               | Global ≥ 80 %            |
| **Artefact Deploy**              | GH Releases                 | Upload `MarFaNet‑RC1.apk`, mapping.txt                       | Only on `v*` tag         |
| **Docs Publish**                 | GitHub Pages                | Publish `CHANGELOG.md`, `TECH_REPORT.html`, `PERF_REPORT.md` | Auto on main branch      |

### 1.1 GitHub Actions Workflow Sketch

```yaml
name: CI
on: [push, pull_request]
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Decrypt Keystore
        env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./scripts/decrypt_keystore.sh
      - name: Lint & Detekt
        run: ./gradlew lint detekt
      - name: Unit Tests & Coverage
        run: ./gradlew testDebugUnitTest jacocoTestReport
      - name: Upload Coverage
        uses: codecov/codecov-action@v4
      - name: Build Release APK
        if: success()
        run: ./gradlew assembleRelease
      - name: Upload Artefacts
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: app/build/outputs/**/*.apk
```

Self‑hosted Android device runner executes macrobenchmark & perf‑gate job `perf-check`.

---

## 2 • Release Candidate (RC‑1) Checklist

1. **Versioning** — Bump `versionCode` & `versionName` → `1.0.0‑rc1` in `build.gradle`.
2. **License Audit** — Run `./gradlew licensee` + SPDX report; all dependencies GPL‑compatible.
3. **Crashlytics Beta Channel** — Optional: add Firebase Crashlytics & distribute internal testing build.
4. **CHANGELOG.md** — Populate sections *Added*, *Changed*, *Fixed*, *Performance*.
5. **Tag & Publish** — `git tag v1.0.0-rc1 && git push origin --tags`; GH Action auto‑uploads artefacts.

---

## 3 • Tasks & Owners

| ID    | Task                                           | Owner  | ETA    |
| ----- | ---------------------------------------------- | ------ | ------ |
| CI‑1  | Write GitHub Actions workflow file             | DevOps | 0.5 d  |
| CI‑2  | Create keystore decrypt script & store secrets | DevOps | 0.5 d  |
| SEC‑1 | Integrate OWASP Dependency‑Check Gradle plugin | Core   | 0.5 d  |
| COV‑1 | Codecov config & badge                         | Core   | 0.25 d |
| DOC‑1 | GH Pages docs publish workflow                 | Docs   | 0.25 d |
| RC‑1  | Bump version & tag RC‑1                        | Lead   | 0.25 d |

---

## 4 • Acceptance Criteria — Phase 4

* **CI pipeline** runs automatically on every PR and passes all gates.
* **Release artefacts** (APK & mapping) appear under *GitHub Releases* for tag `v1.0.0‑rc1`.
* **Coverage badge** on README shows ≥ 80 %.
* **Security scan** returns 0 Critical/High vulnerabilities.
* **Docs site** live at `https://<org>.github.io/marfanet` with latest reports.

---

## 5 • Immediate Next Steps (Today)

1. Create branch `milestone4/ci-cd`.
2. Add `.github/workflows/ci.yml` per §1.1.
3. Commit keystore decrypt stub & request secrets (`KEYSTORE_PASSPHRASE`, `KEY_PASSWORD`, etc.).
4. Push branch & open PR → observe CI dry‑run.

---

*Upon CI green and artefact upload, Phase 4 will be considered complete; we will then move to Phase 5 (Beta feedback & Freeze).*
