# \*\*Sprint 0 – MarFaNet v1.1.0 Planning & CI Remediation \*\*

> **Purpose (Updated):** Begin groundwork for **v1.1.0** *and* resolve all CI build‑blocking errors observed so far:
>
> 1. `./gradlew: No such file or directory`  (Gradle wrapper absent **or** workflow running from wrong directory.)
> 2. `Missing download info for actions/upload‑artifact@v3`  (action version deprecated).
> 3. **New:** Error persists despite wrapper commit — root cause: workflow’s `working-directory` not aligned with wrapper path.

---

## A • Fix #1 – Ensure Gradle Wrapper Present **and** Path Correct

|  Step                                                                             | Command / Change                                                                     | Outcome                                     |
| --------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ------------------------------------------- |
|  A1                                                                               | Verify wrapper exists in repo root **OR** at `./android/` sub‑module.                | Identify real path, e.g. `android/gradlew`. |
|  A2                                                                               | If wrapper is inside **android/**, either:                                           |                                             |
|   a) Move/copy `gradlew*` + `gradle/wrapper` to repo root **(preferred)**, *or*   |                                                                                      |                                             |
|   b) Keep structure and set `working-directory: ./android` for every Gradle step. | Runner finds executable.                                                             |                                             |
|  A3                                                                               | Set exec bit: `git update-index --chmod=+x gradlew` (whichever path you chose).      |                                             |
|  A4                                                                               | Confirm wrapper JAR in Git: `gradle/wrapper/gradle-wrapper.jar` **not** git‑ignored. |                                             |

### Example Workflow Snippet (Wrapper in Subfolder)

```yaml
steps:
  - uses: actions/checkout@v4
  - uses: actions/setup-java@v4
    with:
      distribution: temurin
      java-version: 17
  - name: Build & Security Scan
    run: ./gradlew dependencyCheckAnalyze assembleRelease
    working-directory: ./android  # <‑‑ adjust here
```

> **Tip:** Avoid path headaches by keeping wrapper at repo root.

---

## B • Fix #2 – Update Upload‑Artifact Version

Replace deprecated action:

```yaml
- name: Upload APK artefact
  uses: actions/upload-artifact@v4   # v3 ⇒ v4
  with:
    name: marfanet-universal-release.apk
    path: android/app/build/outputs/apk/release/app-release.apk  # path matches working-directory
```

*You can pin a commit SHA instead of `@v4` if desired.*

---

## C • Full Sample `ci.yml` (Root Wrapper Scenario)

```yaml
name: Android Build • Patch & Beta
on:
  push:
    tags: [ 'v*' ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: android-actions/setup-android@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Build & Security Scan
        run: ./gradlew dependencyCheckAnalyze assembleRelease
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: marfanet-universal-release.apk
          path: app/build/outputs/apk/release/app-release.apk
```

---

## D • Sprint 0 Timeline (remains the same once CI is green)

| Week | Milestone                 | Deliverable                                      |
| ---- | ------------------------- | ------------------------------------------------ |
|  W0  | **CI Green & Scope Lock** | Wrapper/paths fixed; artefacts upload.           |
|  W1  | UX & API Specs            | Wireframes + Split‑Tunnelling/Overlay contracts. |
|  W1  | Tech Spike                | WireGuard POC connected.                         |
|  W2  | Build‑System Upgrade      | AGP 9 + Kotlin 2.0 compile; Compose plugin.      |
|  W2  | Sprint 1 Backlog          | Epics ticketed & estimated.                      |

---

## E • Success Criteria for Sprint 0 (unchanged)

1. CI passes and uploads APK via `upload-artifact@v4`.
2. UX wireframes approved; epics decomposed.
3. WireGuard POC throughput ≥30 % > Xray on 5 G.
4. AGP 9 / Kotlin 2.0 merged w/o new warnings.

---

## F • Immediate Action Checklist

* [ ] Decide **wrapper location strategy** (root vs subfolder).
* [ ] Commit missing wrapper files and/or update `working-directory`.
* [ ] Replace upload‑artifact v3 → v4.
* [ ] Push branch → confirm CI green, artefact present.
* [ ] Tag `v1.0.1-beta2` if new artefact needed.

> **Once CI is green** we proceed with Sprint 0 tasks for v1.1.0.
